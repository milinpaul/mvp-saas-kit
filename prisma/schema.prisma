// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Board {
  id        Int        @id @default(autoincrement())
  title     String     @db.VarChar(255)
  icon      String?    @db.VarChar(255)
  isPublic  Boolean    @default(false) // To make the board public or private
  publicUrl String?    @db.VarChar(255) // For showing public bookmarks
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Bookmark  Bookmark[]
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  url       String   @db.VarChar(255)
  board     Board    @relation(fields: [boardId], references: [id])
  boardId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([boardId])
}
